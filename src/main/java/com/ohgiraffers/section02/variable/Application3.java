package com.ohgiraffers.section02.variable;

public class Application3 {

  public static void main(String[] args) {
    /* 수업목표. 변수의 명명 규칙에 대해 이해할 수 있다.
     * 필기.
     * 변수의 명명 규칙
     * 변수의 이름을 지을 때 아무렇게나 짓는 것이 아닌 정해진 규칙이 있다.
     * 실무적으로는 굉장히 중요하기 떄문에 반드시 숙지해야 하고,
     * 또한, 규칙에 맞느 올바른 변수명을 짓는 것이 좋은 프로그래밍을 하는 첫 단추이다.
     * */

    /* 변수의 명명 규칙
     * 1. 컴파일 에러를 발생시키는 규칙
     * 1-1. 동일한 범위 내에서 동일한 변수명을 가질 수 없다.
     * 1-2. 예약어는 사용이 불가능하다.
     * 1-3. 변수명은 대/소문자를 구분한다. (자바는 대/소문자를 엄격하게 구분하는 언어이다.)
     * 1-4. 변수명은 숫자로 시작할 수 없다.
     * 1-5. 특수 기호는 '_'와 '$'만 사용 가능하다. (공백을 사용할 수 없다.) - '$'도 잘 사용하지 않는 편
     *
     * 2. 컴파일 에러를 발생시키지는 않지만 개발자들끼리의 암묵적인 규칙
     * 2-1. 변수명의 길이 제한은 없다.
     * 2-2. 변수명이 합성어로 이루어진 경우 첫 단어는 소문자, 두 번째 단어는 대문자로 시작한다. (camel-case)
     * 2-3. 단어와 단어 사이의 연결을 언더스코어(_)로 하지 않는다.
     * 2-4. 한글로 변수명을 짓는 것이 가능하지만, 권장하지 않는다.
     * 2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다.
     * 2-6. 전형적인 변수 이름이 있다면 가급적 사용하도록 한다.
     * 2-7. 명사형으로 작성할 수 있도록 한다.
     * 2-8. boolean 형은 의문문으로 가급적 긍정형태로 네이밍한다.
     * */

    /* 1. 컴파일 에러를 발생시키는 규칙 */
    /* 목차 1-1. 동일한 범위 내에서 동일한 변수명을 가질 수 없다. */
    int age = 20;
    //int age = 20; //age라는 변수명이 이미 선언되었기에 동일한 변수명 age를 동일한 범위내에서 사용할 수 없다.(변수명에 빨간밑줄표시되며 에러발생)
    System.out.println(age);

    /* 목차 1-2. 예약어는 사용이 불가능하다. */
    //int true = 1; //error: not a statement
    //int for = 20;

    /* 목차 1-3. 예약어는 사용이 불가능하다. */
    int Age = 20;

    /* 목차 1-4. 예약어는 사용이 불가능하다. */
    //int 1age = 20; //error: not a statement
    int age1 = 20;

    /* 목차 1-5. 특수 기호는 '_'와 '$'만 사용 가능하다. */
    //int sh@rp = 20; //illegal start of type
    int _age = 20;
    int $harp = 20;

    /* 2. 컴파일 에러를 발생시키지는 않지만 개발자들끼리의 암묵적인 규칙 */
    /* 목차 2-1. 변수명의 길이 제한은 없다. 하지만 적당히 하자 */
    int aldjfkljgolaiowepjakljflkfjkfjgkadlk; //길이 제한이 없어 사용가능하지만 어떤 변수인지 알 수 없다.

    /* 목차 2-2. 변수명이 합성어로 이루어진 경우 첫 단어는 소문자, 두 번째 단어는 대문자로 시작한다. (camel-case) */
    int maxAge = 20;
    int minAge = 10;
    //String userName;
    //String userAddress;

    /* 목차 2-3. 단어와 단어 사이의 연결을 언더스코어(_)로 하지 않는다. */
    String user_name; // 에러가 발생하지 않지만 이렇게 하면 안된다.
    String userName; //이게 올바른 표현이다.

    /* 목차 2-4. 한글로 변수명을 짓는 것이 가능하지만, 권장하지 않는다. */
    int 나이; // 가능하지만 권장하지 않음;

    /* 목차 2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다. */
    String s; //어떤 의미인지 파악하기 힘들다.
    String name;

    /* 목차 2-6. 전형적인 변수 이름이 있다면 가급적 사용하도록 한다. */
    int sum = 0; //합계
    int max = 10; //최대값
    int min = 0; //최소값
    int count = 1; // 갯수

    /* 목차 2-7. 명사형으로 작성할 수 있도록 한다. */
    String goHome; // 가능하지만 가급적 명사형으로 짓는다.
    String home;

    /* 목차 2-8. boolean 형은 의문문으로 가급적 긍정형태로 네이밍한다. */
    boolean isAlive = true;
    boolean isDead = false; //Dead는 죽음을 뜻하는 부정적의미를 갖기에 사용하지 않는 것을 권장한다.


  }
}
